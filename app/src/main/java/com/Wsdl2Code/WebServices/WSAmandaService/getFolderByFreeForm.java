package com.Wsdl2Code.WebServices.WSAmandaService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 1/24/2016 9:16:23 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import com.Wsdl2Code.WebServices.WSAmandaService.KvmSerializable_ws;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class getFolderByFreeForm implements KvmSerializable_ws {
    
    public int freeFormCode;
    public boolean freeFormCodeSpecified;
    public String freeFormColumn;
    public String freeFormValue;
    
    public getFolderByFreeForm(){}
    
    public getFolderByFreeForm(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("freeFormCode"))
        {
            Object obj = soapObject.getProperty("freeFormCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                freeFormCode = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                freeFormCode = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("freeFormCodeSpecified"))
        {
            Object obj = soapObject.getProperty("freeFormCodeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                freeFormCodeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                freeFormCodeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("freeFormColumn"))
        {
            Object obj = soapObject.getProperty("freeFormColumn");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                freeFormColumn = j.toString();
            }else if (obj!= null && obj instanceof String){
                freeFormColumn = (String) obj;
            }
        }
        if (soapObject.hasProperty("freeFormValue"))
        {
            Object obj = soapObject.getProperty("freeFormValue");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                freeFormValue = j.toString();
            }else if (obj!= null && obj instanceof String){
                freeFormValue = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return freeFormCode;
            case 1:
                return freeFormCodeSpecified;
            case 2:
                return freeFormColumn;
            case 3:
                return freeFormValue;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 4;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "freeFormCode";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "freeFormCodeSpecified";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "freeFormColumn";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "freeFormValue";
                break;
        }
    }
    
    @Override
    public String getInnerText() {
        return null;
    }
    
    
    @Override
    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
