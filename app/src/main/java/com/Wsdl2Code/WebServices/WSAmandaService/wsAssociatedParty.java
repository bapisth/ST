package com.Wsdl2Code.WebServices.WSAmandaService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 1/24/2016 9:16:23 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import com.Wsdl2Code.WebServices.WSAmandaService.KvmSerializable_ws;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class wsAssociatedParty implements KvmSerializable_ws {
    
    public boolean activeFlag;
    public boolean activeFlagSpecified;
    public int folderPeopleRSN1;
    public boolean folderPeopleRSN1Specified;
    public int folderPeopleRSN2;
    public boolean folderPeopleRSN2Specified;
    public int folderRSN;
    public boolean folderRSNSpecified;
    public String nameFirst;
    public String nameLast;
    public String nameMiddle;
    public String nameSuffix;
    public String nameTitle;
    public String organizationName;
    public String peopleDesc;
    
    public wsAssociatedParty(){}
    
    public wsAssociatedParty(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("activeFlag"))
        {
            Object obj = soapObject.getProperty("activeFlag");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                activeFlag = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                activeFlag = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("activeFlagSpecified"))
        {
            Object obj = soapObject.getProperty("activeFlagSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                activeFlagSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                activeFlagSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("folderPeopleRSN1"))
        {
            Object obj = soapObject.getProperty("folderPeopleRSN1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                folderPeopleRSN1 = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                folderPeopleRSN1 = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("folderPeopleRSN1Specified"))
        {
            Object obj = soapObject.getProperty("folderPeopleRSN1Specified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                folderPeopleRSN1Specified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                folderPeopleRSN1Specified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("folderPeopleRSN2"))
        {
            Object obj = soapObject.getProperty("folderPeopleRSN2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                folderPeopleRSN2 = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                folderPeopleRSN2 = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("folderPeopleRSN2Specified"))
        {
            Object obj = soapObject.getProperty("folderPeopleRSN2Specified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                folderPeopleRSN2Specified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                folderPeopleRSN2Specified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("folderRSN"))
        {
            Object obj = soapObject.getProperty("folderRSN");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                folderRSN = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                folderRSN = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("folderRSNSpecified"))
        {
            Object obj = soapObject.getProperty("folderRSNSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                folderRSNSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                folderRSNSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("nameFirst"))
        {
            Object obj = soapObject.getProperty("nameFirst");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                nameFirst = j.toString();
            }else if (obj!= null && obj instanceof String){
                nameFirst = (String) obj;
            }
        }
        if (soapObject.hasProperty("nameLast"))
        {
            Object obj = soapObject.getProperty("nameLast");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                nameLast = j.toString();
            }else if (obj!= null && obj instanceof String){
                nameLast = (String) obj;
            }
        }
        if (soapObject.hasProperty("nameMiddle"))
        {
            Object obj = soapObject.getProperty("nameMiddle");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                nameMiddle = j.toString();
            }else if (obj!= null && obj instanceof String){
                nameMiddle = (String) obj;
            }
        }
        if (soapObject.hasProperty("nameSuffix"))
        {
            Object obj = soapObject.getProperty("nameSuffix");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                nameSuffix = j.toString();
            }else if (obj!= null && obj instanceof String){
                nameSuffix = (String) obj;
            }
        }
        if (soapObject.hasProperty("nameTitle"))
        {
            Object obj = soapObject.getProperty("nameTitle");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                nameTitle = j.toString();
            }else if (obj!= null && obj instanceof String){
                nameTitle = (String) obj;
            }
        }
        if (soapObject.hasProperty("organizationName"))
        {
            Object obj = soapObject.getProperty("organizationName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                organizationName = j.toString();
            }else if (obj!= null && obj instanceof String){
                organizationName = (String) obj;
            }
        }
        if (soapObject.hasProperty("peopleDesc"))
        {
            Object obj = soapObject.getProperty("peopleDesc");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                peopleDesc = j.toString();
            }else if (obj!= null && obj instanceof String){
                peopleDesc = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return activeFlag;
            case 1:
                return activeFlagSpecified;
            case 2:
                return folderPeopleRSN1;
            case 3:
                return folderPeopleRSN1Specified;
            case 4:
                return folderPeopleRSN2;
            case 5:
                return folderPeopleRSN2Specified;
            case 6:
                return folderRSN;
            case 7:
                return folderRSNSpecified;
            case 8:
                return nameFirst;
            case 9:
                return nameLast;
            case 10:
                return nameMiddle;
            case 11:
                return nameSuffix;
            case 12:
                return nameTitle;
            case 13:
                return organizationName;
            case 14:
                return peopleDesc;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 15;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "activeFlag";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "activeFlagSpecified";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "folderPeopleRSN1";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "folderPeopleRSN1Specified";
                break;
            case 4:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "folderPeopleRSN2";
                break;
            case 5:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "folderPeopleRSN2Specified";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "folderRSN";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "folderRSNSpecified";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "nameFirst";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "nameLast";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "nameMiddle";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "nameSuffix";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "nameTitle";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "organizationName";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "peopleDesc";
                break;
        }
    }
    
    @Override
    public String getInnerText() {
        return null;
    }
    
    
    @Override
    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
