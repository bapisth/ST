package com.Wsdl2Code.WebServices.WSAmandaService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 1/24/2016 9:16:23 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import com.Wsdl2Code.WebServices.WSAmandaService.KvmSerializable_ws;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class wsAttachmentInfo implements KvmSerializable_ws {
    
    public int attachmentInfoCode;
    public boolean attachmentInfoCodeSpecified;
    public String attachmentInfoDateTime;
    public boolean attachmentInfoDateTimeSpecified;
    public String attachmentInfoDesc;
    public double attachmentInfoNumeric;
    public boolean attachmentInfoNumericSpecified;
    public String attachmentInfoType;
    public String attachmentInfoUpper;
    public String attachmentInfoValue;
    public int attachmentRSN;
    public boolean attachmentRSNSpecified;
    public int displayOrder;
    public boolean displayOrderSpecified;
    
    public wsAttachmentInfo(){}
    
    public wsAttachmentInfo(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("attachmentInfoCode"))
        {
            Object obj = soapObject.getProperty("attachmentInfoCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attachmentInfoCode = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                attachmentInfoCode = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("attachmentInfoCodeSpecified"))
        {
            Object obj = soapObject.getProperty("attachmentInfoCodeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attachmentInfoCodeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                attachmentInfoCodeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("attachmentInfoDateTime"))
        {
            Object obj = soapObject.getProperty("attachmentInfoDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attachmentInfoDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                attachmentInfoDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("attachmentInfoDateTimeSpecified"))
        {
            Object obj = soapObject.getProperty("attachmentInfoDateTimeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attachmentInfoDateTimeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                attachmentInfoDateTimeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("attachmentInfoDesc"))
        {
            Object obj = soapObject.getProperty("attachmentInfoDesc");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attachmentInfoDesc = j.toString();
            }else if (obj!= null && obj instanceof String){
                attachmentInfoDesc = (String) obj;
            }
        }
        if (soapObject.hasProperty("attachmentInfoNumeric"))
        {
            Object obj = soapObject.getProperty("attachmentInfoNumeric");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attachmentInfoNumeric = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                attachmentInfoNumeric = (Double) obj;
            }
        }
        if (soapObject.hasProperty("attachmentInfoNumericSpecified"))
        {
            Object obj = soapObject.getProperty("attachmentInfoNumericSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attachmentInfoNumericSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                attachmentInfoNumericSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("attachmentInfoType"))
        {
            Object obj = soapObject.getProperty("attachmentInfoType");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attachmentInfoType = j.toString();
            }else if (obj!= null && obj instanceof String){
                attachmentInfoType = (String) obj;
            }
        }
        if (soapObject.hasProperty("attachmentInfoUpper"))
        {
            Object obj = soapObject.getProperty("attachmentInfoUpper");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attachmentInfoUpper = j.toString();
            }else if (obj!= null && obj instanceof String){
                attachmentInfoUpper = (String) obj;
            }
        }
        if (soapObject.hasProperty("attachmentInfoValue"))
        {
            Object obj = soapObject.getProperty("attachmentInfoValue");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attachmentInfoValue = j.toString();
            }else if (obj!= null && obj instanceof String){
                attachmentInfoValue = (String) obj;
            }
        }
        if (soapObject.hasProperty("attachmentRSN"))
        {
            Object obj = soapObject.getProperty("attachmentRSN");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attachmentRSN = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                attachmentRSN = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("attachmentRSNSpecified"))
        {
            Object obj = soapObject.getProperty("attachmentRSNSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                attachmentRSNSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                attachmentRSNSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("displayOrder"))
        {
            Object obj = soapObject.getProperty("displayOrder");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                displayOrder = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                displayOrder = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("displayOrderSpecified"))
        {
            Object obj = soapObject.getProperty("displayOrderSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                displayOrderSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                displayOrderSpecified = (Boolean) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return attachmentInfoCode;
            case 1:
                return attachmentInfoCodeSpecified;
            case 2:
                return attachmentInfoDateTime;
            case 3:
                return attachmentInfoDateTimeSpecified;
            case 4:
                return attachmentInfoDesc;
            case 5:
                return attachmentInfoNumeric;
            case 6:
                return attachmentInfoNumericSpecified;
            case 7:
                return attachmentInfoType;
            case 8:
                return attachmentInfoUpper;
            case 9:
                return attachmentInfoValue;
            case 10:
                return attachmentRSN;
            case 11:
                return attachmentRSNSpecified;
            case 12:
                return displayOrder;
            case 13:
                return displayOrderSpecified;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 14;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "attachmentInfoCode";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "attachmentInfoCodeSpecified";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "attachmentInfoDateTime";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "attachmentInfoDateTimeSpecified";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "attachmentInfoDesc";
                break;
            case 5:
                info.type = Double.class;
                info.name = "attachmentInfoNumeric";
                break;
            case 6:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "attachmentInfoNumericSpecified";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "attachmentInfoType";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "attachmentInfoUpper";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "attachmentInfoValue";
                break;
            case 10:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "attachmentRSN";
                break;
            case 11:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "attachmentRSNSpecified";
                break;
            case 12:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "displayOrder";
                break;
            case 13:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "displayOrderSpecified";
                break;
        }
    }
    
    @Override
    public String getInnerText() {
        return null;
    }
    
    
    @Override
    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
