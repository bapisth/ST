package com.Wsdl2Code.WebServices.WSAmandaService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 1/24/2016 9:16:23 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import com.Wsdl2Code.WebServices.WSAmandaService.KvmSerializable_ws;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class wsPeopleGroup implements KvmSerializable_ws {
    
    public String comment1;
    public String comment2;
    public String comment3;
    public String endDate;
    public boolean endDateSpecified;
    public int groupRSN;
    public int memberCode;
    public boolean memberCodeSpecified;
    public int peopleRSN;
    public String rowID;
    public String stampDate;
    public boolean stampDateSpecified;
    public String startDate;
    public boolean startDateSpecified;
    
    public wsPeopleGroup(){}
    
    public wsPeopleGroup(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("comment1"))
        {
            Object obj = soapObject.getProperty("comment1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                comment1 = j.toString();
            }else if (obj!= null && obj instanceof String){
                comment1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("comment2"))
        {
            Object obj = soapObject.getProperty("comment2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                comment2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                comment2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("comment3"))
        {
            Object obj = soapObject.getProperty("comment3");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                comment3 = j.toString();
            }else if (obj!= null && obj instanceof String){
                comment3 = (String) obj;
            }
        }
        if (soapObject.hasProperty("endDate"))
        {
            Object obj = soapObject.getProperty("endDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                endDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                endDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("endDateSpecified"))
        {
            Object obj = soapObject.getProperty("endDateSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                endDateSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                endDateSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("groupRSN"))
        {
            Object obj = soapObject.getProperty("groupRSN");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                groupRSN = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                groupRSN = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("memberCode"))
        {
            Object obj = soapObject.getProperty("memberCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                memberCode = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                memberCode = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("memberCodeSpecified"))
        {
            Object obj = soapObject.getProperty("memberCodeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                memberCodeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                memberCodeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("peopleRSN"))
        {
            Object obj = soapObject.getProperty("peopleRSN");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                peopleRSN = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                peopleRSN = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("rowID"))
        {
            Object obj = soapObject.getProperty("rowID");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                rowID = j.toString();
            }else if (obj!= null && obj instanceof String){
                rowID = (String) obj;
            }
        }
        if (soapObject.hasProperty("stampDate"))
        {
            Object obj = soapObject.getProperty("stampDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                stampDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                stampDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("stampDateSpecified"))
        {
            Object obj = soapObject.getProperty("stampDateSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                stampDateSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                stampDateSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("startDate"))
        {
            Object obj = soapObject.getProperty("startDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                startDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                startDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("startDateSpecified"))
        {
            Object obj = soapObject.getProperty("startDateSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                startDateSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                startDateSpecified = (Boolean) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return comment1;
            case 1:
                return comment2;
            case 2:
                return comment3;
            case 3:
                return endDate;
            case 4:
                return endDateSpecified;
            case 5:
                return groupRSN;
            case 6:
                return memberCode;
            case 7:
                return memberCodeSpecified;
            case 8:
                return peopleRSN;
            case 9:
                return rowID;
            case 10:
                return stampDate;
            case 11:
                return stampDateSpecified;
            case 12:
                return startDate;
            case 13:
                return startDateSpecified;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 14;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "comment1";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "comment2";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "comment3";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "endDate";
                break;
            case 4:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "endDateSpecified";
                break;
            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "groupRSN";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "memberCode";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "memberCodeSpecified";
                break;
            case 8:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "peopleRSN";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "rowID";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "stampDate";
                break;
            case 11:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "stampDateSpecified";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "startDate";
                break;
            case 13:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "startDateSpecified";
                break;
        }
    }
    
    @Override
    public String getInnerText() {
        return null;
    }
    
    
    @Override
    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
