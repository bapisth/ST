package com.Wsdl2Code.WebServices.WSAmandaService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 1/24/2016 9:16:23 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import com.Wsdl2Code.WebServices.WSAmandaService.KvmSerializable_ws;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class wsValidCharge implements KvmSerializable_ws {
    
    public int accessCode;
    public boolean accessCodeSpecified;
    public boolean activeFlag;
    public boolean activeFlagSpecified;
    public String additionalReportAgency;
    public String additionalReportAgencyCode;
    public String chargeCode;
    public String chargeDesc;
    public String chargeType;
    public int chargingDocumentCode;
    public boolean chargingDocumentCodeSpecified;
    public String comments;
    public int cost;
    public boolean costSpecified;
    public int costFeeCode;
    public boolean costFeeCodeSpecified;
    public int defaultFine;
    public boolean defaultFineSpecified;
    public String effectiveDate;
    public boolean effectiveDateSpecified;
    public int fineFeeCode;
    public boolean fineFeeCodeSpecified;
    public String legalDesc;
    public String localReportAgency;
    public String localReportAgencyCode;
    public double maximumFine;
    public boolean maximumFineSpecified;
    public double minimumFine;
    public boolean minimumFineSpecified;
    public String nationalReportAgency;
    public String nationalReportAgencyCode;
    public int processCode;
    public boolean processCodeSpecified;
    public int rank;
    public boolean rankSpecified;
    public String severityType;
    public String stampDate;
    public boolean stampDateSpecified;
    public String stampUser;
    public String stateReportAgency;
    public String stateReportAgencyCode;
    
    public wsValidCharge(){}
    
    public wsValidCharge(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("accessCode"))
        {
            Object obj = soapObject.getProperty("accessCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                accessCode = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                accessCode = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("accessCodeSpecified"))
        {
            Object obj = soapObject.getProperty("accessCodeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                accessCodeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                accessCodeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("activeFlag"))
        {
            Object obj = soapObject.getProperty("activeFlag");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                activeFlag = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                activeFlag = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("activeFlagSpecified"))
        {
            Object obj = soapObject.getProperty("activeFlagSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                activeFlagSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                activeFlagSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("additionalReportAgency"))
        {
            Object obj = soapObject.getProperty("additionalReportAgency");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                additionalReportAgency = j.toString();
            }else if (obj!= null && obj instanceof String){
                additionalReportAgency = (String) obj;
            }
        }
        if (soapObject.hasProperty("additionalReportAgencyCode"))
        {
            Object obj = soapObject.getProperty("additionalReportAgencyCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                additionalReportAgencyCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                additionalReportAgencyCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("chargeCode"))
        {
            Object obj = soapObject.getProperty("chargeCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                chargeCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                chargeCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("chargeDesc"))
        {
            Object obj = soapObject.getProperty("chargeDesc");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                chargeDesc = j.toString();
            }else if (obj!= null && obj instanceof String){
                chargeDesc = (String) obj;
            }
        }
        if (soapObject.hasProperty("chargeType"))
        {
            Object obj = soapObject.getProperty("chargeType");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                chargeType = j.toString();
            }else if (obj!= null && obj instanceof String){
                chargeType = (String) obj;
            }
        }
        if (soapObject.hasProperty("chargingDocumentCode"))
        {
            Object obj = soapObject.getProperty("chargingDocumentCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                chargingDocumentCode = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                chargingDocumentCode = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("chargingDocumentCodeSpecified"))
        {
            Object obj = soapObject.getProperty("chargingDocumentCodeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                chargingDocumentCodeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                chargingDocumentCodeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("comments"))
        {
            Object obj = soapObject.getProperty("comments");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                comments = j.toString();
            }else if (obj!= null && obj instanceof String){
                comments = (String) obj;
            }
        }
        if (soapObject.hasProperty("cost"))
        {
            Object obj = soapObject.getProperty("cost");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cost = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                cost = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("costSpecified"))
        {
            Object obj = soapObject.getProperty("costSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                costSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                costSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("costFeeCode"))
        {
            Object obj = soapObject.getProperty("costFeeCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                costFeeCode = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                costFeeCode = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("costFeeCodeSpecified"))
        {
            Object obj = soapObject.getProperty("costFeeCodeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                costFeeCodeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                costFeeCodeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("defaultFine"))
        {
            Object obj = soapObject.getProperty("defaultFine");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                defaultFine = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                defaultFine = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("defaultFineSpecified"))
        {
            Object obj = soapObject.getProperty("defaultFineSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                defaultFineSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                defaultFineSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("effectiveDate"))
        {
            Object obj = soapObject.getProperty("effectiveDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                effectiveDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                effectiveDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("effectiveDateSpecified"))
        {
            Object obj = soapObject.getProperty("effectiveDateSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                effectiveDateSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                effectiveDateSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("fineFeeCode"))
        {
            Object obj = soapObject.getProperty("fineFeeCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fineFeeCode = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                fineFeeCode = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("fineFeeCodeSpecified"))
        {
            Object obj = soapObject.getProperty("fineFeeCodeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fineFeeCodeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fineFeeCodeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("legalDesc"))
        {
            Object obj = soapObject.getProperty("legalDesc");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                legalDesc = j.toString();
            }else if (obj!= null && obj instanceof String){
                legalDesc = (String) obj;
            }
        }
        if (soapObject.hasProperty("localReportAgency"))
        {
            Object obj = soapObject.getProperty("localReportAgency");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                localReportAgency = j.toString();
            }else if (obj!= null && obj instanceof String){
                localReportAgency = (String) obj;
            }
        }
        if (soapObject.hasProperty("localReportAgencyCode"))
        {
            Object obj = soapObject.getProperty("localReportAgencyCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                localReportAgencyCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                localReportAgencyCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("maximumFine"))
        {
            Object obj = soapObject.getProperty("maximumFine");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                maximumFine = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                maximumFine = (Double) obj;
            }
        }
        if (soapObject.hasProperty("maximumFineSpecified"))
        {
            Object obj = soapObject.getProperty("maximumFineSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                maximumFineSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                maximumFineSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("minimumFine"))
        {
            Object obj = soapObject.getProperty("minimumFine");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                minimumFine = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                minimumFine = (Double) obj;
            }
        }
        if (soapObject.hasProperty("minimumFineSpecified"))
        {
            Object obj = soapObject.getProperty("minimumFineSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                minimumFineSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                minimumFineSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("nationalReportAgency"))
        {
            Object obj = soapObject.getProperty("nationalReportAgency");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                nationalReportAgency = j.toString();
            }else if (obj!= null && obj instanceof String){
                nationalReportAgency = (String) obj;
            }
        }
        if (soapObject.hasProperty("nationalReportAgencyCode"))
        {
            Object obj = soapObject.getProperty("nationalReportAgencyCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                nationalReportAgencyCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                nationalReportAgencyCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("processCode"))
        {
            Object obj = soapObject.getProperty("processCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                processCode = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                processCode = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("processCodeSpecified"))
        {
            Object obj = soapObject.getProperty("processCodeSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                processCodeSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                processCodeSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("rank"))
        {
            Object obj = soapObject.getProperty("rank");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                rank = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                rank = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("rankSpecified"))
        {
            Object obj = soapObject.getProperty("rankSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                rankSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                rankSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("severityType"))
        {
            Object obj = soapObject.getProperty("severityType");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                severityType = j.toString();
            }else if (obj!= null && obj instanceof String){
                severityType = (String) obj;
            }
        }
        if (soapObject.hasProperty("stampDate"))
        {
            Object obj = soapObject.getProperty("stampDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                stampDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                stampDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("stampDateSpecified"))
        {
            Object obj = soapObject.getProperty("stampDateSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                stampDateSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                stampDateSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("stampUser"))
        {
            Object obj = soapObject.getProperty("stampUser");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                stampUser = j.toString();
            }else if (obj!= null && obj instanceof String){
                stampUser = (String) obj;
            }
        }
        if (soapObject.hasProperty("stateReportAgency"))
        {
            Object obj = soapObject.getProperty("stateReportAgency");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                stateReportAgency = j.toString();
            }else if (obj!= null && obj instanceof String){
                stateReportAgency = (String) obj;
            }
        }
        if (soapObject.hasProperty("stateReportAgencyCode"))
        {
            Object obj = soapObject.getProperty("stateReportAgencyCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                stateReportAgencyCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                stateReportAgencyCode = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return accessCode;
            case 1:
                return accessCodeSpecified;
            case 2:
                return activeFlag;
            case 3:
                return activeFlagSpecified;
            case 4:
                return additionalReportAgency;
            case 5:
                return additionalReportAgencyCode;
            case 6:
                return chargeCode;
            case 7:
                return chargeDesc;
            case 8:
                return chargeType;
            case 9:
                return chargingDocumentCode;
            case 10:
                return chargingDocumentCodeSpecified;
            case 11:
                return comments;
            case 12:
                return cost;
            case 13:
                return costSpecified;
            case 14:
                return costFeeCode;
            case 15:
                return costFeeCodeSpecified;
            case 16:
                return defaultFine;
            case 17:
                return defaultFineSpecified;
            case 18:
                return effectiveDate;
            case 19:
                return effectiveDateSpecified;
            case 20:
                return fineFeeCode;
            case 21:
                return fineFeeCodeSpecified;
            case 22:
                return legalDesc;
            case 23:
                return localReportAgency;
            case 24:
                return localReportAgencyCode;
            case 25:
                return maximumFine;
            case 26:
                return maximumFineSpecified;
            case 27:
                return minimumFine;
            case 28:
                return minimumFineSpecified;
            case 29:
                return nationalReportAgency;
            case 30:
                return nationalReportAgencyCode;
            case 31:
                return processCode;
            case 32:
                return processCodeSpecified;
            case 33:
                return rank;
            case 34:
                return rankSpecified;
            case 35:
                return severityType;
            case 36:
                return stampDate;
            case 37:
                return stampDateSpecified;
            case 38:
                return stampUser;
            case 39:
                return stateReportAgency;
            case 40:
                return stateReportAgencyCode;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 41;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "accessCode";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "accessCodeSpecified";
                break;
            case 2:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "activeFlag";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "activeFlagSpecified";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "additionalReportAgency";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "additionalReportAgencyCode";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "chargeCode";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "chargeDesc";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "chargeType";
                break;
            case 9:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "chargingDocumentCode";
                break;
            case 10:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "chargingDocumentCodeSpecified";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "comments";
                break;
            case 12:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "cost";
                break;
            case 13:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "costSpecified";
                break;
            case 14:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "costFeeCode";
                break;
            case 15:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "costFeeCodeSpecified";
                break;
            case 16:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "defaultFine";
                break;
            case 17:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "defaultFineSpecified";
                break;
            case 18:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "effectiveDate";
                break;
            case 19:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "effectiveDateSpecified";
                break;
            case 20:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "fineFeeCode";
                break;
            case 21:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "fineFeeCodeSpecified";
                break;
            case 22:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "legalDesc";
                break;
            case 23:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "localReportAgency";
                break;
            case 24:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "localReportAgencyCode";
                break;
            case 25:
                info.type = Double.class;
                info.name = "maximumFine";
                break;
            case 26:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "maximumFineSpecified";
                break;
            case 27:
                info.type = Double.class;
                info.name = "minimumFine";
                break;
            case 28:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "minimumFineSpecified";
                break;
            case 29:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "nationalReportAgency";
                break;
            case 30:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "nationalReportAgencyCode";
                break;
            case 31:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "processCode";
                break;
            case 32:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "processCodeSpecified";
                break;
            case 33:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "rank";
                break;
            case 34:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "rankSpecified";
                break;
            case 35:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "severityType";
                break;
            case 36:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "stampDate";
                break;
            case 37:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "stampDateSpecified";
                break;
            case 38:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "stampUser";
                break;
            case 39:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "stateReportAgency";
                break;
            case 40:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "stateReportAgencyCode";
                break;
        }
    }
    
    @Override
    public String getInnerText() {
        return null;
    }
    
    
    @Override
    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
