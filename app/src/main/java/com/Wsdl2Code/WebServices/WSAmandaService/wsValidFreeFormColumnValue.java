package com.Wsdl2Code.WebServices.WSAmandaService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 1/24/2016 9:16:23 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import com.Wsdl2Code.WebServices.WSAmandaService.KvmSerializable_ws;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class wsValidFreeFormColumnValue implements KvmSerializable_ws {
    
    public int accessCode;
    public String columnName;
    public String columnValue;
    public String columnValueDesc;
    public int freeformCode;
    
    public wsValidFreeFormColumnValue(){}
    
    public wsValidFreeFormColumnValue(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("accessCode"))
        {
            Object obj = soapObject.getProperty("accessCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                accessCode = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                accessCode = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("columnName"))
        {
            Object obj = soapObject.getProperty("columnName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                columnName = j.toString();
            }else if (obj!= null && obj instanceof String){
                columnName = (String) obj;
            }
        }
        if (soapObject.hasProperty("columnValue"))
        {
            Object obj = soapObject.getProperty("columnValue");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                columnValue = j.toString();
            }else if (obj!= null && obj instanceof String){
                columnValue = (String) obj;
            }
        }
        if (soapObject.hasProperty("columnValueDesc"))
        {
            Object obj = soapObject.getProperty("columnValueDesc");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                columnValueDesc = j.toString();
            }else if (obj!= null && obj instanceof String){
                columnValueDesc = (String) obj;
            }
        }
        if (soapObject.hasProperty("freeformCode"))
        {
            Object obj = soapObject.getProperty("freeformCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                freeformCode = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                freeformCode = (Integer) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return accessCode;
            case 1:
                return columnName;
            case 2:
                return columnValue;
            case 3:
                return columnValueDesc;
            case 4:
                return freeformCode;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 5;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "accessCode";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "columnName";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "columnValue";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "columnValueDesc";
                break;
            case 4:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "freeformCode";
                break;
        }
    }
    
    @Override
    public String getInnerText() {
        return null;
    }
    
    
    @Override
    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
