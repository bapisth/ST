package com.Wsdl2Code.WebServices.WSAmandaService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 1/24/2016 9:16:23 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import com.Wsdl2Code.WebServices.WSAmandaService.KvmSerializable_ws;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class wsValidUserMyOffice implements KvmSerializable_ws {
    
    public String comments;
    public String myOfficeDesc;
    public int myOfficeRSN;
    public boolean myOfficeRSNSpecified;
    public String myOfficeType;
    public String myOfficeURL;
    public String userID;
    
    public wsValidUserMyOffice(){}
    
    public wsValidUserMyOffice(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("comments"))
        {
            Object obj = soapObject.getProperty("comments");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                comments = j.toString();
            }else if (obj!= null && obj instanceof String){
                comments = (String) obj;
            }
        }
        if (soapObject.hasProperty("myOfficeDesc"))
        {
            Object obj = soapObject.getProperty("myOfficeDesc");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                myOfficeDesc = j.toString();
            }else if (obj!= null && obj instanceof String){
                myOfficeDesc = (String) obj;
            }
        }
        if (soapObject.hasProperty("myOfficeRSN"))
        {
            Object obj = soapObject.getProperty("myOfficeRSN");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                myOfficeRSN = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                myOfficeRSN = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("myOfficeRSNSpecified"))
        {
            Object obj = soapObject.getProperty("myOfficeRSNSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                myOfficeRSNSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                myOfficeRSNSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("myOfficeType"))
        {
            Object obj = soapObject.getProperty("myOfficeType");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                myOfficeType = j.toString();
            }else if (obj!= null && obj instanceof String){
                myOfficeType = (String) obj;
            }
        }
        if (soapObject.hasProperty("myOfficeURL"))
        {
            Object obj = soapObject.getProperty("myOfficeURL");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                myOfficeURL = j.toString();
            }else if (obj!= null && obj instanceof String){
                myOfficeURL = (String) obj;
            }
        }
        if (soapObject.hasProperty("userID"))
        {
            Object obj = soapObject.getProperty("userID");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                userID = j.toString();
            }else if (obj!= null && obj instanceof String){
                userID = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return comments;
            case 1:
                return myOfficeDesc;
            case 2:
                return myOfficeRSN;
            case 3:
                return myOfficeRSNSpecified;
            case 4:
                return myOfficeType;
            case 5:
                return myOfficeURL;
            case 6:
                return userID;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 7;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "comments";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "myOfficeDesc";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "myOfficeRSN";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "myOfficeRSNSpecified";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "myOfficeType";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "myOfficeURL";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "userID";
                break;
        }
    }
    
    @Override
    public String getInnerText() {
        return null;
    }
    
    
    @Override
    public void setInnerText(String s) {
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
